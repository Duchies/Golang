package main

import (
	"fmt"
	"sync"
	"time"
)

func main() {

	fmt.Println("Channels wait group and goroutines")

	ch := make(chan int)
	wg := sync.WaitGroup{}

	go func() {
		for i := 0; i < 100; i++ {
			go func() {
				wg.Add(1)
				defer wg.Done()
				result := doWork(i)
				ch <- result
			}()
		}
		wg.Wait()
		close(ch)
	}()

	for v := range ch {
		fmt.Println(v)
	}

	fmt.Println("task done")
}

func doWork(value int) int {
	// time to do particular work
	time.Sleep(1 * time.Second)
	return value
}
